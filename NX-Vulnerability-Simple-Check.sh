#!/bin/bash

# Function to check if nx exists
check_nx() {
    local path="$1"
    [ -x "$path" ] && echo "$path" && return 0
    return 1
}

# Try both possible locations
NX_CMD=$(check_nx "/opt/homebrew/bin/nx") || NX_CMD=$(check_nx "/usr/local/bin/nx")

# If not found, exit 0 with message
if [ -z "$NX_CMD" ]; then
    echo "nx package hasn't been installed"
    exit 0
fi

# Get versions
GLOBAL_VERSION=$($NX_CMD --version 2>/dev/null)
LOCAL_VERSION=$($NX_CMD version 2>/dev/null | grep "Local" | awk '{print $2}')
[ -z "$LOCAL_VERSION" ] && LOCAL_VERSION="Not found"

# List of vulnerable versions
VULNERABLE=("21.5.0" "20.9.0" "20.10.0" "21.6.0" "20.11.0" "21.7.0" "21.8.0" "3.2.0")

# Check if either version is vulnerable
for v in "${VULNERABLE[@]}"; do
    if [ "$GLOBAL_VERSION" = "$v" ] || [ "$LOCAL_VERSION" = "$v" ]; then
        echo "This device contains a Vulnerable nx package"
        exit 2
    fi
done

# If none matched
echo "This device does not contain a Vulnerable nx package"
exit 0